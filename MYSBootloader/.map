Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
                              MYSBootloader.o (__do_clear_bss)
/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_cmpdi2_s8.o)
                              MYSBootloader.o (__cmpdi2_s8)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(atoi.o)
                              MYSBootloader.o (atoi)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(memcmp.o)
                              MYSBootloader.o (memcmp)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(mul10.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(atoi.o) (__mulhi_const_10)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(eerd_block_atmega328p.o)
                              MYSBootloader.o (__eerd_block_m328p)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(eewr_block_atmega328p.o)
                              MYSBootloader.o (__eewr_block_m328p)
/usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(eewr_byte_atmega328p.o)
                              MYSBootloader.o (__eewr_byte_m328p)

Discarded input sections

 .text          0x0000000000000000        0x0 MYSBootloader.o
 .bss           0x0000000000000000        0x0 MYSBootloader.o
 .text.watchdogConfig
                0x0000000000000000        0xc MYSBootloader.o
 .text.putch    0x0000000000000000        0xe MYSBootloader.o
 .text.getch    0x0000000000000000       0x18 MYSBootloader.o
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_cmpdi2_s8.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_cmpdi2_s8.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_cmpdi2_s8.o)
 .text.libgcc.div
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_cmpdi2_s8.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_cmpdi2_s8.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_cmpdi2_s8.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_cmpdi2_s8.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_cmpdi2_s8.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(atoi.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(atoi.o)
 .stab          0x0000000000000000      0x180 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(atoi.o)
 .stabstr       0x0000000000000000       0x3d /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(atoi.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(memcmp.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(memcmp.o)
 .stab          0x0000000000000000       0xc0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(memcmp.o)
 .stabstr       0x0000000000000000       0x3f /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(memcmp.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(mul10.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(mul10.o)
 .stab          0x0000000000000000       0x84 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(mul10.o)
 .stabstr       0x0000000000000000       0x3c /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(mul10.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(eerd_block_atmega328p.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(eerd_block_atmega328p.o)
 .stab          0x0000000000000000      0x114 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(eerd_block_atmega328p.o)
 .stabstr       0x0000000000000000       0x41 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(eerd_block_atmega328p.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(eewr_block_atmega328p.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(eewr_block_atmega328p.o)
 .stab          0x0000000000000000       0xa8 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(eewr_block_atmega328p.o)
 .stabstr       0x0000000000000000       0x41 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(eewr_block_atmega328p.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(eewr_byte_atmega328p.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(eewr_byte_atmega328p.o)
 .stab          0x0000000000000000       0xf0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(eewr_byte_atmega328p.o)
 .stabstr       0x0000000000000000       0x40 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(eewr_byte_atmega328p.o)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
START GROUP
END GROUP
Address of section .text set to 0x7800
LOAD MYSBootloader.o
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libm.a
START GROUP
LOAD /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libm.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000007800      0x732
 *(.vectors)
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000000000007800                . = ALIGN (0x2)
                0x0000000000007800                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000007800        0x0 linker stubs
 *(.trampolines*)
                0x0000000000007800                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000007800                __ctors_start = .
 *(.ctors)
                0x0000000000007800                __ctors_end = .
                0x0000000000007800                __dtors_start = .
 *(.dtors)
                0x0000000000007800                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000007800       0x10 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
                0x0000000000007800                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000007810      0x308 MYSBootloader.o
                0x0000000000007810                main
 *(.init9)
 *(.text)
                0x0000000000007b18                . = ALIGN (0x2)
 *(.text.*)
 .text.delaym   0x0000000000007b18       0x1c MYSBootloader.o
 .text.SPItransfer
                0x0000000000007b34       0x26 MYSBootloader.o
 .text.IsFirmwareValid
                0x0000000000007b5a       0x68 MYSBootloader.o
 .text.reboot   0x0000000000007bc2       0x12 MYSBootloader.o
 .text.startup  0x0000000000007bd4       0x18 MYSBootloader.o
 .text.BurstReadAddress
                0x0000000000007bec       0x26 MYSBootloader.o
                0x0000000000007bec                BurstReadAddress
 .text.BurstWriteAddress
                0x0000000000007c12       0x24 MYSBootloader.o
                0x0000000000007c12                BurstWriteAddress
 .text.ReadAddress
                0x0000000000007c36        0x8 MYSBootloader.o
                0x0000000000007c36                ReadAddress
 .text.WriteAddress
                0x0000000000007c3e       0x1e MYSBootloader.o
                0x0000000000007c3e                WriteAddress
 .text.Flush_RX
                0x0000000000007c5c        0xa MYSBootloader.o
                0x0000000000007c5c                Flush_RX
 .text.Flush_TX
                0x0000000000007c66        0xa MYSBootloader.o
                0x0000000000007c66                Flush_TX
 .text.Flush_RXTX_CLI
                0x0000000000007c70        0xa MYSBootloader.o
                0x0000000000007c70                Flush_RXTX_CLI
 .text.sendAndWait
                0x0000000000007c7a      0x1ee MYSBootloader.o
 .text.libgcc   0x0000000000007e68       0x18 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_cmpdi2_s8.o)
                0x0000000000007e68                __cmpdi2_s8
 .text.avr-libc
                0x0000000000007e80       0x3a /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(atoi.o)
                0x0000000000007e80                atoi
 .text.avr-libc
                0x0000000000007eba       0x1a /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(memcmp.o)
                0x0000000000007eba                memcmp
 .text.avr-libc
                0x0000000000007ed4       0x10 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(mul10.o)
                0x0000000000007ed4                __mulhi_const_10
 .text.avr-libc
                0x0000000000007ee4       0x20 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(eerd_block_atmega328p.o)
                0x0000000000007ee4                __eerd_block_m328p
                0x0000000000007ee8                __eerd_blraw_m328p
 .text.avr-libc
                0x0000000000007f04       0x12 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(eewr_block_atmega328p.o)
                0x0000000000007f04                __eewr_block_m328p
 .text.avr-libc
                0x0000000000007f16       0x1c /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(eewr_byte_atmega328p.o)
                0x0000000000007f16                __eewr_byte_m328p
                0x0000000000007f18                __eewr_r18_m328p
                0x0000000000007f32                . = ALIGN (0x2)
 *(.fini9)
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 *(.fini0)
                0x0000000000007f32                _etext = .

.data           0x0000000000800100        0x0 load address 0x0000000000007f32
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 MYSBootloader.o
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_cmpdi2_s8.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(atoi.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(memcmp.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(mul10.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(eerd_block_atmega328p.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(eewr_block_atmega328p.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a(eewr_byte_atmega328p.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800100                . = ALIGN (0x2)
                0x0000000000800100                _edata = .
                0x0000000000800100                PROVIDE (__data_end, .)

.bss            0x0000000000800100       0xd5
                0x0000000000800100                PROVIDE (__bss_start, .)
 *(.bss)
 *(.bss*)
 .bss.progBuf   0x0000000000800100       0x80 MYSBootloader.o
 .bss.inMsg     0x0000000000800180       0x21 MYSBootloader.o
 .bss.outMsg    0x00000000008001a1       0x21 MYSBootloader.o
 .bss.fc        0x00000000008001c2        0x8 MYSBootloader.o
 .bss.nc        0x00000000008001ca        0x3 MYSBootloader.o
 .bss.pipe0_reading_address
                0x00000000008001cd        0x8 MYSBootloader.o
                0x00000000008001cd                pipe0_reading_address
 *(COMMON)
                0x00000000008001d5                PROVIDE (__bss_end, .)
                0x0000000000007f32                __data_load_start = LOADADDR (.data)
                0x0000000000007f32                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00000000008001d5        0x0
                0x00000000008001d5                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00000000008001d5                PROVIDE (__noinit_end, .)
                0x00000000008001d5                _end = .
                0x00000000008001d5                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 MYSBootloader.o
                                         0x12 (size before relaxing)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(MYSBootloader.elf elf32-avr)
LOAD linker stubs
